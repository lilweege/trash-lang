
? https://en.wikipedia.org/wiki/Rule_110
? a deliberately simple proof of concept

i64 SIZE; SIZE = 20;
i64[SIZE] prvRow;
i64[SIZE] curRow;

? initialize memory
i64 i; i = 0;
while (i < SIZE) {
    prvRow[i] = 0;
    curRow[i] = 0;
    i = i + 1;
}
prvRow[SIZE-1] = 1;


i = 0;
while (i < SIZE - 2) {

    ? perform CA
    i64 j; j = 1;
    while (j < SIZE-1) {
        i64 a; a = prvRow[j-1];
        i64 b; b = prvRow[j];
        i64 c; c = prvRow[j+1];
        if ( a &&  b &&  c) curRow[j] = 0;
        else if ( a &&  b && !c) curRow[j] = 1;
        else if ( a && !b &&  c) curRow[j] = 1;
        else if ( a && !b && !c) curRow[j] = 0;
        else if (!a &&  b &&  c) curRow[j] = 1;
        else if (!a &&  b && !c) curRow[j] = 1;
        else if (!a && !b &&  c) curRow[j] = 1;
        else if (!a && !b && !c) curRow[j] = 0;
        j = j + 1;
    }

    ? print row
    j = 0;
    while (j < SIZE) {
        if (curRow[j] == 1) {
            putc('*');
        }
        else {
            putc(' ');
        }
        j = j + 1;
    }
    putc('\n');
    
    ? swap buffer
    j = 0;
    while (j < SIZE) {
        prvRow[j] = curRow[j];
        j = j + 1;
    }

    i = i + 1;
}
